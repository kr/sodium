
def array ():
  inline C get <<end
    int i;

    if (args == nil) die("array.get -- not enough args");
    if (!intp(car(args))) die1("array.get -- not an int", car(args));

    i = datum2int(car(args));
    return array_get(rcv, i);
  end

  inline C put! <<end
    int i;

    if (args == nil) die("array.put! -- not enough args");
    if (!intp(car(args))) die1("array.put! -- not an int", car(args));

    i = datum2int(car(args));
    array_put(rcv, i, car(args));
    return ok_sym;
  end

  (map f):
    cons (f (array.car)) ((array.cdr).map f)

  (filter f):
    def rest ((array.cdr).filter f)
    if (f (array.car)):
      cons (array.car) rest
      . rest

  (run f):
    f (array.car)
    (array.cdr) f
    . 'ok

  (= p):
    if ((array.car) = (p.car)):
      if ((array.cdr) = (p.cdr)) true false
      . false

  (assq name):
    if (is? (array.car.car) name) (array.car) (array.cdr.assq name)

def install-array ():
  inline C run <<end
    if (args == nil) die("install-array -- not enough args");
    array_surrogate = car(args);
    return ok_sym;
  end

install-array array

. '()
