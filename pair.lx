
def pair ():
  inline C (set-cdr! x) <<end
    rcv[1] = (size_t) n_x;
    return ok_sym;
  end

  inline C (car) <<end
    return car(rcv);
  end

  inline C (cdr) <<end
    return cdr(rcv);
  end

  (filter f):
    def rest ((pair.cdr).filter f)
    ? (f (pair.car)):
      cons (pair.car) rest
      . rest

  (run f):
    f (pair.car)
    (pair.cdr) f
    . 'ok

  (= p):
    ? ((pair.car) = (p.car)):
      ? ((pair.cdr) = (p.cdr)) true false
      . false

  (assq name):
    ? (is? (pair.car.car) name) (pair.car) (pair.cdr.assq name)

def init ():
  inline C (run sur) <<end
    pair_surrogate = n_sur;
    return ok_sym;
  end

init pair

. '()
